# -*- coding: utf-8 -*-
"""linear_search.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GA7ICztwcKMd7dGGWMGdlX9OIsi0XsqX
"""

import random
import time
import matplotlib.pyplot as plt

def lin_search(data, target):  #method searching for the target
    for i in data:
        if i == target:
            return i
    return -1

def measure_time(data, target):   #method for measuring time taken for the process each time
    start_time = time.time()
    lin_search(data, target)
    end_time = time.time()
    return end_time - start_time

data = [1000, 2000, 3000, 4000, 5000]  #different data sizes for each iteration
times = []

for i in data:
    search_data = [random.randint(0, 10000) for _ in range(i)]    #generating n(data) random numbers between 1 - 10000
    target = random.randint(0, 10000)
    time_taken = measure_time(search_data, target)
    times.append(time_taken)

plt.plot(data, times, marker='o')   #plotting the graph with no of data and time taken
plt.xlabel('Data Size')
plt.ylabel('Time Taken (seconds)')
plt.title('Linear Search Time Complexity')
plt.show()

